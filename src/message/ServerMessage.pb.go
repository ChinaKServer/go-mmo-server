// Code generated by protoc-gen-go. DO NOT EDIT.
// source: ServerMessage.proto

package message

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

//服务器列表
type ServerListRequest struct {
	MsgID                MID      `protobuf:"varint,1,opt,name=msgID,proto3,enum=ProtoMessage.MID" json:"msgID,omitempty"`
	Type                 int32    `protobuf:"varint,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerListRequest) Reset()         { *m = ServerListRequest{} }
func (m *ServerListRequest) String() string { return proto.CompactTextString(m) }
func (*ServerListRequest) ProtoMessage()    {}
func (*ServerListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_741c7e7fb9e8b054, []int{0}
}

func (m *ServerListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerListRequest.Unmarshal(m, b)
}
func (m *ServerListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerListRequest.Marshal(b, m, deterministic)
}
func (m *ServerListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerListRequest.Merge(m, src)
}
func (m *ServerListRequest) XXX_Size() int {
	return xxx_messageInfo_ServerListRequest.Size(m)
}
func (m *ServerListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerListRequest proto.InternalMessageInfo

func (m *ServerListRequest) GetMsgID() MID {
	if m != nil {
		return m.MsgID
	}
	return MID_None
}

func (m *ServerListRequest) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

type ServerListResponse struct {
	MsgID                MID           `protobuf:"varint,1,opt,name=msgID,proto3,enum=ProtoMessage.MID" json:"msgID,omitempty"`
	Server               []*ServerInfo `protobuf:"bytes,2,rep,name=server,proto3" json:"server,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ServerListResponse) Reset()         { *m = ServerListResponse{} }
func (m *ServerListResponse) String() string { return proto.CompactTextString(m) }
func (*ServerListResponse) ProtoMessage()    {}
func (*ServerListResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_741c7e7fb9e8b054, []int{1}
}

func (m *ServerListResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerListResponse.Unmarshal(m, b)
}
func (m *ServerListResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerListResponse.Marshal(b, m, deterministic)
}
func (m *ServerListResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerListResponse.Merge(m, src)
}
func (m *ServerListResponse) XXX_Size() int {
	return xxx_messageInfo_ServerListResponse.Size(m)
}
func (m *ServerListResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerListResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ServerListResponse proto.InternalMessageInfo

func (m *ServerListResponse) GetMsgID() MID {
	if m != nil {
		return m.MsgID
	}
	return MID_None
}

func (m *ServerListResponse) GetServer() []*ServerInfo {
	if m != nil {
		return m.Server
	}
	return nil
}

// 服务器信息
type ServerInfo struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	BelongID             int32    `protobuf:"varint,2,opt,name=belongID,proto3" json:"belongID,omitempty"`
	Ip                   string   `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Type                 int32    `protobuf:"varint,4,opt,name=type,proto3" json:"type,omitempty"`
	Port                 int32    `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	State                int32    `protobuf:"varint,6,opt,name=state,proto3" json:"state,omitempty"`
	Version              string   `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Content              string   `protobuf:"bytes,8,opt,name=content,proto3" json:"content,omitempty"`
	Online               int32    `protobuf:"varint,11,opt,name=online,proto3" json:"online,omitempty"`
	MaxUserCount         int32    `protobuf:"varint,12,opt,name=maxUserCount,proto3" json:"maxUserCount,omitempty"`
	HttpPort             int32    `protobuf:"varint,13,opt,name=httpPort,proto3" json:"httpPort,omitempty"`
	OpenTime             string   `protobuf:"bytes,14,opt,name=openTime,proto3" json:"openTime,omitempty"`
	MaintainTime         string   `protobuf:"bytes,15,opt,name=maintainTime,proto3" json:"maintainTime,omitempty"`
	Name                 string   `protobuf:"bytes,16,opt,name=name,proto3" json:"name,omitempty"`
	Wwwip                string   `protobuf:"bytes,17,opt,name=wwwip,proto3" json:"wwwip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ServerInfo) Reset()         { *m = ServerInfo{} }
func (m *ServerInfo) String() string { return proto.CompactTextString(m) }
func (*ServerInfo) ProtoMessage()    {}
func (*ServerInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_741c7e7fb9e8b054, []int{2}
}

func (m *ServerInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerInfo.Unmarshal(m, b)
}
func (m *ServerInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerInfo.Marshal(b, m, deterministic)
}
func (m *ServerInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerInfo.Merge(m, src)
}
func (m *ServerInfo) XXX_Size() int {
	return xxx_messageInfo_ServerInfo.Size(m)
}
func (m *ServerInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ServerInfo proto.InternalMessageInfo

func (m *ServerInfo) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *ServerInfo) GetBelongID() int32 {
	if m != nil {
		return m.BelongID
	}
	return 0
}

func (m *ServerInfo) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ServerInfo) GetType() int32 {
	if m != nil {
		return m.Type
	}
	return 0
}

func (m *ServerInfo) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *ServerInfo) GetState() int32 {
	if m != nil {
		return m.State
	}
	return 0
}

func (m *ServerInfo) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *ServerInfo) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *ServerInfo) GetOnline() int32 {
	if m != nil {
		return m.Online
	}
	return 0
}

func (m *ServerInfo) GetMaxUserCount() int32 {
	if m != nil {
		return m.MaxUserCount
	}
	return 0
}

func (m *ServerInfo) GetHttpPort() int32 {
	if m != nil {
		return m.HttpPort
	}
	return 0
}

func (m *ServerInfo) GetOpenTime() string {
	if m != nil {
		return m.OpenTime
	}
	return ""
}

func (m *ServerInfo) GetMaintainTime() string {
	if m != nil {
		return m.MaintainTime
	}
	return ""
}

func (m *ServerInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ServerInfo) GetWwwip() string {
	if m != nil {
		return m.Wwwip
	}
	return ""
}

// 注册更新服务器
type ServerRegisterUpdateRequest struct {
	MsgID                MID         `protobuf:"varint,1,opt,name=msgID,proto3,enum=ProtoMessage.MID" json:"msgID,omitempty"`
	ServerInfo           *ServerInfo `protobuf:"bytes,2,opt,name=serverInfo,proto3" json:"serverInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ServerRegisterUpdateRequest) Reset()         { *m = ServerRegisterUpdateRequest{} }
func (m *ServerRegisterUpdateRequest) String() string { return proto.CompactTextString(m) }
func (*ServerRegisterUpdateRequest) ProtoMessage()    {}
func (*ServerRegisterUpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_741c7e7fb9e8b054, []int{3}
}

func (m *ServerRegisterUpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServerRegisterUpdateRequest.Unmarshal(m, b)
}
func (m *ServerRegisterUpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServerRegisterUpdateRequest.Marshal(b, m, deterministic)
}
func (m *ServerRegisterUpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServerRegisterUpdateRequest.Merge(m, src)
}
func (m *ServerRegisterUpdateRequest) XXX_Size() int {
	return xxx_messageInfo_ServerRegisterUpdateRequest.Size(m)
}
func (m *ServerRegisterUpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ServerRegisterUpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ServerRegisterUpdateRequest proto.InternalMessageInfo

func (m *ServerRegisterUpdateRequest) GetMsgID() MID {
	if m != nil {
		return m.MsgID
	}
	return MID_None
}

func (m *ServerRegisterUpdateRequest) GetServerInfo() *ServerInfo {
	if m != nil {
		return m.ServerInfo
	}
	return nil
}

func init() {
	proto.RegisterType((*ServerListRequest)(nil), "ProtoMessage.ServerListRequest")
	proto.RegisterType((*ServerListResponse)(nil), "ProtoMessage.ServerListResponse")
	proto.RegisterType((*ServerInfo)(nil), "ProtoMessage.ServerInfo")
	proto.RegisterType((*ServerRegisterUpdateRequest)(nil), "ProtoMessage.ServerRegisterUpdateRequest")
}

func init() { proto.RegisterFile("ServerMessage.proto", fileDescriptor_741c7e7fb9e8b054) }

var fileDescriptor_741c7e7fb9e8b054 = []byte{
	// 432 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0x95, 0xdd, 0x3a, 0x29, 0xd3, 0x34, 0x6d, 0x16, 0x84, 0x56, 0xe1, 0x62, 0xf9, 0x82, 0x4f,
	0x16, 0x0a, 0x17, 0xce, 0xc5, 0x17, 0x4b, 0x44, 0x8a, 0x0c, 0xbd, 0x70, 0x73, 0x9b, 0xc1, 0xac,
	0x54, 0xef, 0x2e, 0xbb, 0xdb, 0x06, 0x6e, 0xfc, 0x06, 0xff, 0xca, 0x01, 0xed, 0x8e, 0xeb, 0xc6,
	0x87, 0x20, 0xe8, 0x25, 0x99, 0xf7, 0xde, 0xec, 0xdb, 0x79, 0x1e, 0x1b, 0x9e, 0x7f, 0x44, 0x73,
	0x8f, 0x66, 0x8d, 0xd6, 0x36, 0x2d, 0x16, 0xda, 0x28, 0xa7, 0xd8, 0x6c, 0xe3, 0xff, 0x7a, 0x6e,
	0x79, 0xb1, 0xae, 0xca, 0x91, 0x9e, 0x6d, 0x60, 0x41, 0xc7, 0x3e, 0x08, 0xeb, 0x6a, 0xfc, 0x76,
	0x87, 0xd6, 0xb1, 0xd7, 0x90, 0x74, 0xb6, 0xad, 0x4a, 0x1e, 0xa5, 0x51, 0x3e, 0x5f, 0x2d, 0x8a,
	0x7d, 0x93, 0x62, 0x5d, 0x95, 0x35, 0xe9, 0x8c, 0xc1, 0xb1, 0xfb, 0xa1, 0x91, 0xc7, 0x69, 0x94,
	0x27, 0x75, 0xa8, 0x33, 0x05, 0x6c, 0xdf, 0xd1, 0x6a, 0x25, 0x2d, 0xfe, 0xbb, 0xe5, 0x1b, 0x98,
	0xd8, 0x70, 0x9c, 0xc7, 0xe9, 0x51, 0x7e, 0xba, 0xe2, 0xe3, 0x4e, 0xb2, 0xae, 0xe4, 0x17, 0x55,
	0xf7, 0x7d, 0xd9, 0xef, 0x18, 0xe0, 0x91, 0x66, 0x73, 0x88, 0xc5, 0x36, 0x5c, 0x93, 0xd4, 0xb1,
	0xd8, 0xb2, 0x25, 0x9c, 0x5c, 0xe3, 0xad, 0x92, 0xfe, 0x72, 0x9a, 0x73, 0xc0, 0xa1, 0x57, 0xf3,
	0xa3, 0x34, 0xca, 0x9f, 0xd5, 0xb1, 0xd0, 0x43, 0x9e, 0xe3, 0xc7, 0x3c, 0x9e, 0xd3, 0xca, 0x38,
	0x9e, 0x10, 0xe7, 0x6b, 0xf6, 0x02, 0x12, 0xeb, 0x1a, 0x87, 0x7c, 0x12, 0x48, 0x02, 0x8c, 0xc3,
	0xf4, 0x1e, 0x8d, 0x15, 0x4a, 0xf2, 0x69, 0xb0, 0x7c, 0x80, 0x5e, 0xb9, 0x51, 0xd2, 0xa1, 0x74,
	0xfc, 0x84, 0x94, 0x1e, 0xb2, 0x97, 0x30, 0x51, 0xf2, 0x56, 0x48, 0xe4, 0xa7, 0xc1, 0xaa, 0x47,
	0x2c, 0x83, 0x59, 0xd7, 0x7c, 0xbf, 0xb2, 0x68, 0xde, 0xab, 0x3b, 0xe9, 0xf8, 0x2c, 0xa8, 0x23,
	0xce, 0x27, 0xfb, 0xea, 0x9c, 0xde, 0xf8, 0xe9, 0xce, 0x28, 0xd9, 0x03, 0xf6, 0x9a, 0xd2, 0x28,
	0x3f, 0x89, 0x0e, 0xf9, 0x3c, 0x5c, 0x39, 0x60, 0xf2, 0x16, 0xd2, 0x35, 0x82, 0xf4, 0xf3, 0xa0,
	0x8f, 0x38, 0x9f, 0x5a, 0x36, 0x1d, 0xf2, 0x8b, 0xa0, 0x85, 0xda, 0xa7, 0xde, 0xed, 0x76, 0x42,
	0xf3, 0x45, 0x20, 0x09, 0x64, 0x3f, 0x23, 0x78, 0x45, 0x8f, 0xbf, 0xc6, 0x56, 0x58, 0x87, 0xe6,
	0x4a, 0x6f, 0x1b, 0x87, 0xff, 0xfd, 0x32, 0xbd, 0x03, 0xb0, 0xc3, 0x1a, 0xc3, 0xaa, 0xfe, 0xb6,
	0xfd, 0xbd, 0xde, 0xd5, 0xaf, 0x08, 0xce, 0x48, 0xf2, 0xbf, 0xe2, 0x06, 0x59, 0x09, 0xf3, 0xf1,
	0x4c, 0xec, 0xa0, 0xd3, 0xf2, 0xa0, 0xc2, 0x2e, 0x61, 0x46, 0x88, 0x12, 0x3d, 0xc5, 0xe3, 0x72,
	0x09, 0xe7, 0xca, 0xb4, 0x45, 0xd7, 0xa9, 0xa2, 0x23, 0xf5, 0xf3, 0xb4, 0x2f, 0xae, 0x27, 0xe1,
	0x1b, 0x7c, 0xfb, 0x27, 0x00, 0x00, 0xff, 0xff, 0xcd, 0x40, 0x69, 0xf8, 0xba, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ServerServiceClient is the client API for ServerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServerServiceClient interface {
	//服务器注册
	ServerRegister(ctx context.Context, in *ServerInfo, opts ...grpc.CallOption) (*ServerInfo, error)
	//服务器更新
	ServerUpdate(ctx context.Context, in *ServerInfo, opts ...grpc.CallOption) (*ServerInfo, error)
}

type serverServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewServerServiceClient(cc grpc.ClientConnInterface) ServerServiceClient {
	return &serverServiceClient{cc}
}

func (c *serverServiceClient) ServerRegister(ctx context.Context, in *ServerInfo, opts ...grpc.CallOption) (*ServerInfo, error) {
	out := new(ServerInfo)
	err := c.cc.Invoke(ctx, "/ProtoMessage.ServerService/ServerRegister", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *serverServiceClient) ServerUpdate(ctx context.Context, in *ServerInfo, opts ...grpc.CallOption) (*ServerInfo, error) {
	out := new(ServerInfo)
	err := c.cc.Invoke(ctx, "/ProtoMessage.ServerService/ServerUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServerServiceServer is the server API for ServerService service.
type ServerServiceServer interface {
	//服务器注册
	ServerRegister(context.Context, *ServerInfo) (*ServerInfo, error)
	//服务器更新
	ServerUpdate(context.Context, *ServerInfo) (*ServerInfo, error)
}

// UnimplementedServerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedServerServiceServer struct {
}

func (*UnimplementedServerServiceServer) ServerRegister(ctx context.Context, req *ServerInfo) (*ServerInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerRegister not implemented")
}
func (*UnimplementedServerServiceServer) ServerUpdate(ctx context.Context, req *ServerInfo) (*ServerInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ServerUpdate not implemented")
}

func RegisterServerServiceServer(s *grpc.Server, srv ServerServiceServer) {
	s.RegisterService(&_ServerService_serviceDesc, srv)
}

func _ServerService_ServerRegister_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServiceServer).ServerRegister(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProtoMessage.ServerService/ServerRegister",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServiceServer).ServerRegister(ctx, req.(*ServerInfo))
	}
	return interceptor(ctx, in, info, handler)
}

func _ServerService_ServerUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ServerInfo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServerServiceServer).ServerUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ProtoMessage.ServerService/ServerUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServerServiceServer).ServerUpdate(ctx, req.(*ServerInfo))
	}
	return interceptor(ctx, in, info, handler)
}

var _ServerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ProtoMessage.ServerService",
	HandlerType: (*ServerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ServerRegister",
			Handler:    _ServerService_ServerRegister_Handler,
		},
		{
			MethodName: "ServerUpdate",
			Handler:    _ServerService_ServerUpdate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "ServerMessage.proto",
}
